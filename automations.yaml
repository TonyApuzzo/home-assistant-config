- alias: "Setup Prod Environment"
  initial_state: on
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: template
    value_template: >-
      {{ is_state('sensor.environment', 'PROD') }}
  action:
    # Turn on all automations
    - service: automation.turn_on
      entity_id: all

- alias: "Setup Dev Environment"
  initial_state: on
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: template
    value_template: >-
      {{ is_state('sensor.environment', 'DEV') }}
  action:
    # Don't start any automations automatically in Dev.
    - service: automation.turn_off
      entity_id: all

- alias: "Normalize Temperature"
  initial_state: on
  trigger:
    - entity_id: sensor.ecobee_spread
      platform: state
  condition:
    - condition: numeric_state
      entity_id: sensor.ecobee_spread
      above: 2.0
  action:
    - service: climate.ecobee_set_fan_min_on_time
      entity_id: climate.thermostat
      data_template:
        # Only mix air around if it is warm-ish
        fan_min_on_time: >-
          {%- if state_attr('climate.thermostat', 'current_temperature')|float >= 67.0
                 and states('sensor.ecobee_spread')|float > 3.0 -%}
            60
          {%- else -%}
            0
          {%- endif -%}

- alias: "Run Register Booster"
  initial_state: on
  trigger:
    - entity_id: climate.thermostat
      platform: state
  condition:
    - condition: template
      value_template: >-
        {{- is_state_attr('climate.thermostat', 'fan', 'on') -}}
  action:
    - service: switch.turn_on
      entity_id: switch.register_booster

- alias: "Stop Register Booster"
  initial_state: on
  trigger:
    - entity_id: climate.thermostat
      platform: state
  condition:
    - condition: template
      value_template: >-
        {{- not is_state_attr('climate.thermostat', 'fan', 'on') -}}
  action:
    - service: switch.turn_off
      entity_id: switch.register_booster

- alias: "Listen to CDs started from Harmony Hub"
  initial_state: on
  hide_entity: true
  trigger:
    platform: state
    entity_id: remote.family_room_harmony_hub
  condition:
    condition: template
    value_template: >-
      {{- trigger is defined 
          and trigger.to_state is not none
          and trigger.to_state.attributes is not none 
          and trigger.to_state.attributes.current_activity == "Listen to CDs" -}}
  action:
    service: switch.turn_on
    entity_id: switch.denon_cd

- alias: "Listen to CDs ended from Harmony Hub"
  initial_state: on
  hide_entity: true
  trigger:
    platform: state
    entity_id: remote.family_room_harmony_hub
  condition:
    condition: template
    value_template: >-
      {{- trigger is defined 
          and trigger.from_state is not none
          and trigger.from_state.attributes is not none 
          and trigger.from_state.attributes.current_activity == "Listen to CDs" -}}
  action:
    service: switch.turn_off
    entity_id: switch.denon_cd

- alias: Casting to Yamaha RX-V475
  initial_state: on
  hide_entity: true
  trigger:
    - platform: state
      entity_id: media_player.office_chromecast
      to: playing
    - platform: state
      entity_id: media_player.everywhere
      to: playing
    - platform: state
      entity_id: media_player.upstairs_audio
      to: playing
  condition:
    condition: template
    value_template: >-
      {{- trigger is defined 
          and trigger.from_state is defined
          and trigger.from_state.state != "playing"
      -}}
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.rx_v475_a16974
        source: HDMI1
    - condition: state
      entity_id: media_player.rx_v475_a16974
      state:  'off'
    - service: media_player.turn_on
      data:
        entity_id: media_player.rx_v475_a16974

- alias: Powering off Yamaha RX-V475
  initial_state: on
  hide_entity: true
  trigger:
    - platform: state
      entity_id: media_player.rx_v475_a16974
      from: 'on'
      to: 'off'
  condition:
    condition: template
    value_template: >-
      {{- not is_state("media_player.office_chromecast", "off") -}}
  action:
    service: media_player.turn_off
    data:
      entity_id: media_player.office_chromecast

- alias: Casting to Onkyo TX-RZ820
  initial_state: on
  hide_entity: true
  trigger:
    - platform: state
      entity_id: media_player.onkyo_txrz820_4f772a
      to: playing
    # - platform: state
    #   entity_id: media_player.everywhere
    #   to: playing
  condition:
    condition: template
    value_template: >-
      {{- not is_state_attr("remote.family_room_harmony_hub", "current_activity", "Network Music") -}}
  action:
    service: remote.turn_on
    data:
      entity_id: remote.family_room_harmony_hub
      activity: "Network Music"

# When casting to SHIELD, start the corresponding Harmony Activity
- alias: "Casting to SHIELD"
  initial_state: on
  hide_entity: true
  trigger:
    - platform: state
      entity_id: media_player.shield
      to: "playing"
  condition:
    condition: template
    value_template: >-
      {{- not is_state_attr("remote.family_room_harmony_hub", "current_activity", "SHIELD TV") -}}
  action:
    service: remote.turn_on
    data:
      entity_id: remote.family_room_harmony_hub
      activity: "SHIELD TV"

- alias: "Casting to SHIELD ended from Harmony Hub"
  initial_state: on
  hide_entity: true
  trigger:
    - platform: state
      entity_id: remote.family_room_harmony_hub
  condition:
    condition: template
    value_template: >-
      {{- trigger is defined 
          and trigger.from_state is not none
          and trigger.from_state.attributes is not none 
          and trigger.from_state.attributes.current_activity == "SHIELD TV" -}}
  action:
    - service: media_player.media_stop
      data:
        entity_id: media_player.shield
    - service: media_player.turn_off
      data:
        entity_id: media_player.shield

# When casting to TV Room ACC, start the corresponding Harmony Activity
- alias: "Casting to TV Room ACC"
  initial_state: on
  hide_entity: true
  trigger:
    - platform: state
      entity_id: media_player.tv_room_acc
      to: "playing"
    - platform: state
      entity_id: media_player.everywhere
      to: playing
  condition:
    condition: template
    value_template: >-
      {{- not is_state_attr("remote.family_room_harmony_hub", "current_activity", "Chromecast Audio") -}}
  action:
    service: remote.turn_on
    data:
      entity_id: remote.family_room_harmony_hub
      activity: "Chromecast Audio"
- alias: "Casting to TV Room ACC ended from Harmony Hub"
  initial_state: on
  hide_entity: true
  trigger:
    - platform: state
      entity_id: remote.family_room_harmony_hub
  condition:
    condition: template
    value_template: >-
      {{- trigger is defined 
          and trigger.from_state is not none
          and trigger.from_state.attributes is not none 
          and trigger.from_state.attributes.current_activity == "Chromecast Audio" -}}
  action:
    - service: media_player.media_stop
      data:
        entity_id: media_player.tv_room_acc
    - service: media_player.turn_off
      data:
        entity_id: media_player.tv_room_acc

- alias: "Fridge Temperature Warning"
  id: fridge_alarm
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.fridge_temperature
  condition:
    condition: template
    value_template: >-
      {%- if is_state('sensor.fridge_temperature', 'unknown') -%}
        false
      {%- else -%}
        {%- set t = states('sensor.fridge_temperature')|float -%}
        {{- 33.0 > t or t > 41.0 -}}
      {%- endif -%}
   # entity_id: sensor.fridge_temperature
  action:
    service: persistent_notification.create
    data:
      notification_id: warning_fridge_temperature
      message: >-
        Fridge temperature 
        {{states.sensor.fridge_temperature.state_with_unit}} at
        {{now().strftime('%c')}}!
      title: "Fridge Temp out of Range!"

- alias: "Garage Warning"
  id: garage_warning
  initial_state: on
  trigger:
    platform: state
    entity_id: cover.linear_gd00z4_garage_door_opener_remote_controller_barrier_state_label
    to: 'open'
    for:
      minutes: 15
  condition:
    condition: template
    value_template: >-
      {{ not is_state(
          "cover.linear_gd00z4_garage_door_opener_remote_controller_barrier_state_label",
          "closed") }}
  action:
    service: persistent_notification.create
    data_template:
      notification_id: garage_warning
      title: >-
        Garage Door is 
        {{ states('cover.linear_gd00z4_garage_door_opener_remote_controller_barrier_state_label')|title }}!
      message: >-
        The garage door has been 
        {{ states('cover.linear_gd00z4_garage_door_opener_remote_controller_barrier_state_label') }}
        for at least 15 minutes, consider closing it.

##
# Alarm Type Alarm Level      Notification Event
# 021        001              Lock Secured using Keyed cylinder or inside thumb-turn
# 022        001              Lock Un-Secured using Keyed cylinder or inside thumb-turn
# 027        001              Lock Auto Secured – Successful (Fully extended)
# 017        001              Lock Secured at Keypad – Bolt Jammed (Not fully extended)
# 018        000 or User-ID#* Lock Secured at Keypad – Successful (Fully extended)
# 026        001              Lock Auto Secured – Bolt Jammed (Not fully extended)
# 019        User-ID#*        Lock Un-Secured by User (User-ID) at Keypad
# 023        001              Lock Secured by Controller – Bolt Jammed (Not fully extended)
# 024        001              Lock Secured by Controller – Successful (Fully extended)
# 025        001              Lock Un-Secured by Controller – Successful (Fully retracted)
# 112        User-ID#*        New User Code (User-ID#) added to the lock
# 032        001              All User Codes deleted from lock
# 161        001              Failed User Code attempt at Keypad
# 162        User-ID#*        Attempted access by user (User-ID#) outside of scheduled
# 167        001              Low battery level
# 168        001              Critical battery level
# 169        001              Battery level too low to operate lock 
- id: sync_front_door_unlocked
  trigger:
    - entity_id: sensor.kwikset_front_door_alarm_type
      platform: state
      to: '19'
    - entity_id: sensor.kwikset_front_door_alarm_type
      platform: state
      to: '22'
  condition:
    - condition: state
      entity_id: lock.kwikset_front_door
      state: locked
  action:
    - data:
        entity_id: lock.kwikset_front_door
      service: lock.unlock
  initial_state: on

- id: sync_front_door_locked
  trigger:
    - entity_id: sensor.kwikset_front_door_alarm_type
      platform: state
      to: '18'
    - entity_id: sensor.kwikset_front_door_alarm_type
      platform: state
      to: '21'
    - entity_id: sensor.kwikset_front_door_alarm_type
      platform: state
      to: '27'
  condition:
    - condition: state
      entity_id: lock.kwikset_front_door
      state: unlocked
  action:
    data:
      entity_id: lock.kwikset_front_door
    service: lock.lock
  initial_state: on

- id: autolock_front_door
  alias: Autolock Front Door
  trigger:
    - entity_id: lock.kwikset_front_door
      for:
        minutes: 5
      platform: state
      to: unlocked
  condition:
    - condition: state
      entity_id: lock.kwikset_front_door
      state: unlocked
  action:
    - data:
        entity_id: lock.kwikset_front_door
      service: lock.lock
  initial_state: on

- alias: "Turn on Porch Light when motion detected"
  id: outdoor_motion
  initial_state: on
  trigger:
    platform: numeric_state
    entity_id: sensor.vision_zp3102_pir_motion_sensor_alarm_level
    above: 0
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: or
        conditions:
          - condition: state
            entity_id: light.switch_front_porch_light
            state: 'off'
          - condition: state
            entity_id: timer.outdoor_motion
            state: active
  action:
    - service: light.turn_on
      data:
        entity_id: light.switch_front_porch_light
    - service: timer.start
      data:
        entity_id: timer.outdoor_motion
        duration: '00:05:00'

- alias: "Turn off Porch Light after motion timeout"
  id: motion_timeout
  initial_state: on
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.outdoor_motion
  action:
    - service: light.turn_off
      data:
        entity_id: light.switch_front_porch_light

# vim: ts=2 sw=2 expandtab ai
