homeassistant:
  # Load packages
  packages: !include_dir_named packages
  # Customization file
  customize: !include customize.yaml
  
logger:
  default: warn
  logs:
    homeassistant.components.rest: debug
    homeassistant.components.rest_command: debug
    homeassistant.components.mqtt: warn
    homeassistant.components.harmony: warn
    homeassistant.components.lutron_caseta: warn
    homeassistant.components.zwave: warn

# Enables the frontend
frontend:

lovelace:
  mode: storage
  dashboards:
    ho-me:
      mode: yaml
      title: Dashboard
      icon: mdi:script
      show_in_sidebar: true
      filename: ui-lovelace.yaml

panel_custom:
  - name: zwavegraph2
    sidebar_title: Z-Wave Graph
    sidebar_icon: mdi:access-point-network
    url_path: zwave

# Enables configuration UI
config:

api:

# Enable mobile app integration
mobile_app:

# Cloud
cloud:

alexa:
  smart_home:
    filter:
      include_entities:
        - light.office_lights
        - light.cree_connected_a_19_60w_equivalent_c11b0bfe_level_on_off
        - light.living_room_floor_lamp

# Monitor system health
system_health:

# Monitor Device Presence
device_tracker:
  - platform: ddwrt
    host: !secret ddwrt_host
    ssl: true
    verify_ssl: false
    username: !secret ddwrt_admin_username
    password: !secret ddwrt_admin_password
    interval_seconds: 15
    consider_home: 180
    new_device_defaults:
      track_new_devices: true
  - platform: ddwrt
    host: !secret ddwrt2_host
    ssl: true
    verify_ssl: false
    username: !secret ddwrt2_admin_username
    password: !secret ddwrt2_admin_password
    interval_seconds: 15
    consider_home: 180
    new_device_defaults:
      track_new_devices: true

# Can't use Bluetooth since I don't have bluetooth adapter on this hardware
#  - platform: bluetooth_tracker
#  - platform: bluetooth_le_tracker

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# https://www.home-assistant.io/components/http/
http: !include secret.http.yaml

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

timer:
  outdoor_motion:
    duration: '00:00:15'

# Discover some devices automatically
discovery:
  ignore: []

zeroconf:

ssdp:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

recorder:
  purge_keep_days: 8
  db_url: !secret recorder_db_url
  # exclude:
  #   domains:
  #     - automation
  #     - device_tracker
  #     - weblink
  #     - updater
  #     - group
  #     - scene
  #     - script
  #     - sun
  #     - timer
  #     - weather
  #     - zwave
  #   entities: {}

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

# Track people
person:

# Sensors
sensor:
  # Weather prediction
  #- platform: yr

  # Track the moon
  #- platform: moon

  # Raspberry Pi System Resources
  - platform: systemmonitor
    resources:
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: processor_use
      - type: memory_use_percent
      - type: swap_use_percent

  # Custom Sensors
  - platform: template
    sensors:
      environment:
        friendly_name: 'Environment'
        value_template: !secret ENVIRONMENT

      thermostat_current_humidity:
        value_template: '{{ (state_attr("climate.thermostat", "current_humidity") | int ) }}' 
        friendly_name: 'Current Humidity'
        unit_of_measurement: '%'
        icon_template: mdi:water-percent

      thermostat_current_temperature:
        value_template: '{{ (state_attr("climate.thermostat", "current_temperature") | int ) }}' 
        friendly_name: 'Current Temperature'
        unit_of_measurement: '°F'
        device_class: temperature

      # Difference between max and minimum temperature in the house
      ecobee_spread:
        friendly_name: 'Temperature Spread'
        unit_of_measurement: 'Δ°F'
        device_class: temperature
        value_template: >-
          {% set t = [
            states('sensor.lil_bee_temperature'),
            states('sensor.office_temperature'),
            states('sensor.thermostat_current_temperature'),
            ] | map('regex_replace', '(^[-+]?[0-9]*\.?[0-9]+$)|.*', '\\1') 
              | reject('eq', '') 
              | map('float')
              | list %}
          {% set spread = t|max - t|min if t else 0 %}
          {{ spread | round(2) }}

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

# Lutron Caseta
lutron_caseta:
  host: !secret LUTRON_CASETA_HOST
  keyfile: /ssl/caseta.key
  certfile: /ssl/caseta.crt
  ca_certs: /ssl/caseta-bridge.crt

# Media Players
media_player:
  - platform: onkyo
    host: tx-rz820.lan.
    name: Downstairs TX-RZ820
    sources:
      am: Tuner (AM)
      aux: AUX
      bd-dvd: Bluray (BD/DVD)
      bluetooth: Bluetooth
      cbl-sat: TiVo (CBL/SAT)
      cd: CD
      fm: Tuner (FM)
      game: Shield (GAME)
      net: NET
      pc: Chromecast Audio (PC)
      phono: PHONO
      strm-box: Roku (STRM BOX)
      tv: TV

# Switches
switch:
  - platform: template
    switches:
      front_door_lock:
        friendly_name: "Front Door"
        icon_template: >-
          {%- if is_state('lock.kwikset_front_door', 'locked') -%}
            mdi:lock-outline
          {%- else -%}
            mdi:lock-open-outline
          {%- endif -%}
        value_template: >-
          {{ is_state('lock.kwikset_front_door', 'locked') }}
        turn_off:
          - service: lock.unlock
            data_template:
              entity_id: lock.kwikset_front_door
        turn_on:
          - service: lock.lock
            data_template:
              entity_id: lock.kwikset_front_door

      all_audio:
        friendly_name: "All Audio"
        value_template: >-
          {{ is_state('group.media_player_avr', 'on') }}
        icon_template: mdi:boombox
        turn_off:             
          - service: homeassistant.turn_off
            data_template:
              entity_id:
                - remote.family_room_harmony_hub
                - group.media_player_avr
                - group.media_player_cast
        turn_on:
          - service: homeassistant.turn_on
            data_template:
              entity_id: 
                - group.media_player_avr

      occupancy:
        friendly_name: "Occupancy"
        value_template: >-
          {{ is_state('switch.all_audio', 'on') or
             ((states.light 
              | selectattr('state', 'eq', 'on') 
              | map(attribute='state') 
              | list)[0] == 'on'
             ) or 
             is_state('group.occupancy_sensors', 'on')
          }}
        icon_template: mdi:home-assistant
        turn_off:             
          - service: homeassistant.turn_off
            data_template:
              entity_id:
                - switch.all_audio
          - service: light.turn_off
            data:
              entity_id: all
        turn_on:

      thermostat_fan_mode:
        friendly_name: "Thermostat Fan Mode"
        value_template: >-
          {{- state_attr('climate.thermostat_2', 'fan_min_on_time') is not none
              and state_attr('climate.thermostat_2', 'fan_min_on_time')|int > 5 -}}
        icon_template: >-
          {%- if state_attr('climate.thermostat_2', 'fan_min_on_time') is not none
              and state_attr('climate.thermostat_2', 'fan_min_on_time')|int > 5 -%}
            mdi:fan
          {%- else -%}
            mdi:fan-off
          {%- endif -%}
        turn_on:
          - service: ecobee.set_fan_min_on_time
            data:
              entity_id: climate.thermostat_2
              fan_min_on_time: 60
        turn_off:
          - service: ecobee.set_fan_min_on_time
            data:
              entity_id: climate.thermostat_2
              fan_min_on_time: 0

# Lights
light:
  - platform: group
    name: Office Lights
    entities:
      - light.office_sconce
      - light.cree_connected_a_19_60w_equivalent_663b0afe_level_on_off
  - platform: template
    lights:
      switch_front_foyer_chandelier:
        friendly_name: Front Foyer_Chandelier
        level_template: '{{- 255 if is_state("switch.front_foyer_chandelier", "on") else 0 -}}'
        value_template: '{{- is_state("switch.front_foyer_chandelier", "on") -}}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.front_foyer_chandelier
        turn_off:
          service: switch.turn_off
          entity_id: switch.front_foyer_chandelier
        set_level:
          service_template: 'switch.turn_{{- "off" if brightness == 0 else "on" -}}'
          entity_id: switch.front_foyer_chandelier

  - platform: template
    lights:
      switch_front_porch_light:
        friendly_name: Front Porch_Light
        level_template: '{{- 255 if is_state("switch.front_porch_light", "on") else 0 -}}'
        value_template: '{{- is_state("switch.front_porch_light", "on") -}}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.front_porch_light
        turn_off:
          service: switch.turn_off
          entity_id: switch.front_porch_light
        set_level:
          service_template: 'switch.turn_{{- "off" if brightness == 0 else "on" -}}'
          entity_id: switch.front_porch_light

  - platform: template
    lights:
      living_room_floor_lamp:
        friendly_name: Living Room_Floor Lamp
        level_template: '{{- 255 if is_state("switch.zooz_zen25_s2_double_plug_switch", "on") else 0 -}}'
        value_template: '{{- is_state("switch.zooz_zen25_s2_double_plug_switch", "on") -}}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.zooz_zen25_s2_double_plug_switch
        turn_off:
          service: switch.turn_off
          entity_id: switch.zooz_zen25_s2_double_plug_switch
        set_level:
          service_template: '{{- "switch.turn_" ~ ( "off" if brightness == 0 else "on") -}}'
          entity_id: switch.zooz_zen25_s2_double_plug_switch

  - platform: template
    lights:
      switch_kitchen_lights:
        friendly_name: Kitchen_Lights
        level_template: '{{- 255 if is_state("switch.kitchen_lights", "on") else 0 -}}'
        value_template: '{{- is_state("switch.kitchen_lights", "on") -}}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.kitchen_lights
        turn_off:
          service: switch.turn_off
          entity_id: switch.kitchen_lights
        set_level:
          service_template: 'switch.turn_{{- "off" if brightness == 0 else "on" -}}'
          entity_id: switch.kitchen_lights

group: !include groups.yaml
automation: !include automations.yaml
scene: !include scenes.yaml
script: !include scripts.yaml
