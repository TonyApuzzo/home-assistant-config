homeassistant:
  # Name of the location where Home Assistant is running
  # name: Home
  # Location required to calculate the time the sun rises and sets
  # latitude: !secret home_latitude
  # longitude: !secret home_longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  # elevation: !secret home_elevation
  # metric for Metric, imperial for Imperial
  # unit_system: !secret home_unit_system
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  # time_zone: !secret home_time_zone
  # Load packages
  packages: !include_dir_named packages
  # Customization file
  customize: !include customize.yaml
  # Auth providers
  auth_providers: !include secret.auth_providers.yaml

logger:
  default: warn
  logs:
    homeassistant.components.harmony: debug
    homeassistant.components.lutron_caseta: debug


# Enables the frontend
frontend:

lovelace:
  mode: yaml

panel_custom:
  - name: zwavegraph2
    sidebar_title: Z-Wave Graph
    sidebar_icon: mdi:access-point-network
    url_path: zwave

# Enables configuration UI
config:

api:

alexa:
  smart_home:

# Monitor system health
system_health:

# Monitor Device Presence
device_tracker:
  - platform: ddwrt
    host: !secret ddwrt_host
    username: !secret ddwrt_admin_username
    password: !secret ddwrt_admin_password
    interval_seconds: 15
    consider_home: 180
    new_device_defaults:
      track_new_devices: true
  - platform: ddwrt
    host: !secret ddwrt2_host
    username: !secret ddwrt2_admin_username
    password: !secret ddwrt2_admin_password
    interval_seconds: 15
    consider_home: 180
    new_device_defaults:
      track_new_devices: true

# Can't use Bluetooth since I don't have bluetooth adapter on this hardware
#  - platform: bluetooth_tracker
#  - platform: bluetooth_le_tracker

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# https://www.home-assistant.io/components/http/
http: !include secret.http.yaml

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

timer:
  outdoor_motion:
    duration: '00:00:15'

# Discover some devices automatically
discovery:
  ignore:
    - homekit

zeroconf:

ssdp:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Recorder is a disaster, so record as little as possible
recorder:
  purge_keep_days: 10
  db_url: !secret recorder_db_url
  exclude:
    domains:
      - automation
      - device_tracker
      - weblink
      - updater
      - group
      - input_number
      - input_select
      - input_text
      - input_boolean
      - scene
      - script
      - sun
      - timer
      - weather
      - zwave
    entities: {}

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

# Sensors
sensor:
  # Weather prediction
  #- platform: yr

  # Track the moon
  #- platform: moon

  # Raspberry Pi System Resources
  - platform: systemmonitor
    resources:
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: processor_use
      - type: memory_use_percent
      - type: swap_use_percent

  # Custom Sensors
  - platform: template
    sensors:
      environment:
        friendly_name: 'Environment'
        value_template: !secret ENVIRONMENT
        
      # Difference between max and minimum temperature in the house
      ecobee_spread:
        friendly_name: 'Temperature Spread'
        unit_of_measurement: 'Δ°F'
        device_class: temperature
        value_template: >-
          {% set t = [
            states('sensor.lil_bee_temperature_2'),
            states('sensor.office_temperature_2'),
            states('sensor.thermostat_temperature')
            ] | map('regex_replace', '(^[-+]?[0-9]*\.?[0-9]+$)|.*', '\\1') 
              | reject('eq', '') 
              | map('float')
              | list %}
          {% set spread = t|max - t|min if t else 0 %}
          {{ spread | round(2) }}

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

# Cloud
cloud:

# # Emulated Roku
# emulated_roku:
#   servers:
#     - name: Home Assistant
#       listen_port: 8060

# Emulated Hue (for Alexa integration)
# emulated_hue:
#   expose_by_default: false
#   host_ip: 192.168.0.101
#   listen_port: 80
#   advertise_ip: 192.168.0.101
#   advertise_port: 80
#   entities:
#     switch.occupancy:
#       name: "Occupancy"
#       hidden: false
#     switch.audioengine_a2_plug_switch:
#       name: "Bedroom Speakers"
#       hidden: false

# Lutron Caseta
lutron_caseta:
  host: !secret lutron_caseta_host
  keyfile: /ssl/caseta.key
  certfile: /ssl/caseta.crt
  ca_certs: /ssl/caseta-bridge.crt

weather:
  - platform: darksky
    api_key: !secret DARKSKY_API_KEY

# ecobee thermostat
ecobee:
  api_key: !secret ECOBEE_API_KEY

# Harmony Remote
remote:
  - platform: harmony
    name: "Family Room" 
    activity: "Watch TiVo Bolt"

# Media Players
media_player:
#   - platform: roku
#     scan_interval: 20

  - platform: onkyo
    host: tx-rz820.local
    name: Downstairs TX-RZ820
    sources:
      am: Tuner (AM)
      aux: AUX
      bd-dvd: Bluray (BD/DVD)
      bluetooth: Bluetooth
      cbl-sat: TiVo (CBL/SAT)
      cd: CD
      fm: Tuner (FM)
      game: Shield (GAME)
      net: NET
      pc: Chromecast Audio (PC)
      phono: PHONO
      strm-box: Roku (STRM BOX)
      tv: TV

# Switches
switch:
  - platform: template
    switches:

      all_audio:
        friendly_name: "All Audio"
        value_template: >-
          {{ is_state('group.media_player_avr', 'on') }}
        icon_template: mdi:boombox
        turn_off:             
          - service: homeassistant.turn_off
            data_template:
              entity_id:
                - remote.family_room_harmony_hub
                - group.media_player_avr
                - group.media_player_cast
        turn_on:
          - service: homeassistant.turn_on
            data_template:
              entity_id: 
                - group.media_player_avr

      occupancy:
        friendly_name: "Occupancy"
        value_template: >-
          {{ is_state('switch.all_audio', 'on') or
             ((states.light 
              | selectattr('state', 'eq', 'on') 
              | map(attribute='state') 
              | list)[0] == 'on'
             ) or
             is_state('binary_sensor.lil_bee_occupancy', 'on') or
             is_state('binary_sensor.fridge_occupancy', 'on') or
             is_state('binary_sensor.office_occupancy', 'on') or
             is_state('binary_sensor.thermostat_occupancy', 'on')
          }}
        icon_template: mdi:home-assistant
        turn_off:             
          - service: homeassistant.turn_off
            data_template:
              entity_id:
                - switch.all_audio
          - service: light.turn_off
            data:
              entity_id: all
        turn_on:

      thermostat_fan_mode:
        friendly_name: "Thermostat Fan Mode"
        value_template: >-
          {{- state_attr('climate.thermostat', 'fan_min_on_time') is not none
              and state_attr('climate.thermostat', 'fan_min_on_time')|int > 5 -}}
        icon_template: >-
          {%- if state_attr('climate.thermostat', 'fan_min_on_time') is not none
              and state_attr('climate.thermostat', 'fan_min_on_time')|int > 5 -%}
            mdi:fan
          {%- else -%}
            mdi:fan-off
          {%- endif -%}
        turn_on:
          - service: climate.ecobee_set_fan_min_on_time
            data:
              entity_id: climate.thermostat
              fan_min_on_time: 60
        turn_off:
          - service: climate.ecobee_set_fan_min_on_time
            data:
              entity_id: climate.thermostat
              fan_min_on_time: 0
  # Switch
  - platform: vesync
    username: !secret VESYNC_USERNAME
    password: !secret VESYNC_PASSWORD

# Lights
light:
  - platform: group
    name: Office Lights
    entities:
      - light.cree_connected_a_19_60w_equivalent_663b0afe_level_on_off
      - light.cree_connected_a_19_60w_equivalent_dbaa0afe_level_on_off
  - platform: template
    lights:
      switch_front_foyer_chandelier:
        friendly_name: Front Foyer_Chandelier
        level_template: '{{ 255 if is_state("switch.front_foyer_chandelier", "on") else 0 }}'
        value_template: '{{ is_state("switch.front_foyer_chandelier", "on") }}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.front_foyer_chandelier
        turn_off:
          service: switch.turn_off
          entity_id: switch.front_foyer_chandelier
        set_level:
          service_template: switch.turn_'{{ "off" if brightness == 0 else "on" }}'
          entity_id: switch.front_foyer_chandelier

  - platform: template
    lights:
      switch_front_porch_light:
        friendly_name: Front Porch_Light
        level_template: '{{ 255 if is_state("switch.front_porch_light", "on") else 0 }}'
        value_template: '{{ is_state("switch.front_porch_light", "on") }}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.front_porch_light
        turn_off:
          service: switch.turn_off
          entity_id: switch.front_porch_light
        set_level:
          service_template: switch.turn_'{{ "off" if brightness == 0 else "on" }}'
          entity_id: switch.front_porch_light

  - platform: template
    lights:
      switch_living_room_floor_lamp:
        friendly_name: Living Room_Floor Lamp
        level_template: '{{ 255 if is_state("switch.vesync", "on") else 0 }}'
        value_template: '{{ is_state("switch.vesync", "on") }}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.vesync
        turn_off:
          service: switch.turn_off
          entity_id: switch.vesync
        set_level:
          service_template: switch.turn_'{{ "off" if brightness == 0 else "on" }}'
          entity_id: switch.vesync

  - platform: template
    lights:
      switch_kitchen_lights:
        friendly_name: Kitchen_Lights
        level_template: '{{ 255 if is_state("switch.kitchen_lights", "on") else 0 }}'
        value_template: '{{ is_state("switch.kitchen_lights", "on") }}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.kitchen_lights
        turn_off:
          service: switch.turn_off
          entity_id: switch.kitchen_lights
        set_level:
          service_template: switch.turn_'{{ "off" if brightness == 0 else "on" }}'
          entity_id: switch.kitchen_lights

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
